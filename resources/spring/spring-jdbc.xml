<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"  
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"  
       xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
       xmlns:cache="http://www.springframework.org/schema/cache"  
       xsi:schemaLocation="  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context.xsd  
    http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx.xsd  
    http://www.springframework.org/schema/jdbc  
    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd  
    http://www.springframework.org/schema/cache  
    http://www.springframework.org/schema/cache/spring-cache.xsd  
    http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop.xsd  
    http://www.springframework.org/schema/util  
    http://www.springframework.org/schema/util/spring-util.xsd" 
    >
    <context:annotation-config />
     <!-- 数据库连接池 -->
	 <bean id="dataSource"  class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
 		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="1000"/>
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
		<property name="validationQuery" value="${jdbc.validationQuery}"/>
	 </bean>
	
   <!-- mybatis文件配置，扫描所有mapper文件 -->  
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" p:dataSource-ref="dataSource"  
         p:configLocation="classpath:mybatis/mybatis-config.xml" />  
 
   <!-- spring与mybatis整合配置，扫描所有dao -->  
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:basePackage="com.innovate.*.dao,com.innovate.*.*.dao"  
         p:sqlSessionFactoryBeanName="sqlSessionFactory"/>  
         
  	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  <property name="basePackage" value="org.mybatis.spring.sample.mapper" />
	</bean>  -->
 
   <!-- 对dataSource 数据源进行事务管理 -->  
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"  
         p:dataSource-ref="dataSource"/>  
 
   <!-- 事务管理 通知 -->  
   <tx:advice id="txAdvice" transaction-manager="transactionManager">  
       <tx:attributes>  
           <!-- 对insert,update,delete 开头的方法进行事务管理,只要有异常就回滚 -->  
           <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>  
           <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>  
           <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>  
           <!-- select,count开头的方法,开启只读,提高数据库访问性能 -->  
           <tx:method name="select*" read-only="true"/>  
           <tx:method name="count*" read-only="true"/>  
           <tx:method name="list*" read-only="true"/>
           <tx:method name="query*" read-only="true"/>
           <tx:method name="check*" read-only="true"/>
           <tx:method name="is*" read-only="true"/>
           <!-- 对其他方法 使用默认的事务管理 -->  
           <tx:method name="*"/>  
       </tx:attributes>  
   </tx:advice>  
   <!-- 事务 aop 配置 -->  
   <aop:config>  
       <aop:pointcut id="serviceMethods" expression="execution(* com.innovate..service..*(..))"/>  
       <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"/>  
   </aop:config>  
   <!-- 配置使Spring采用CGLIB代理 -->  
   <aop:aspectj-autoproxy proxy-target-class="true"/>  
   <!-- 启用对事务注解的支持 -->  
   <tx:annotation-driven transaction-manager="transactionManager"/> 
  
	<context:component-scan base-package="com.innovate">
	 <!-- 扫描符合@Service @Repository的类 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
	</context:component-scan>
    
	<!-- 数据字典工具方法声明 -->
	<bean name="dicFactory"  class="com.innovate.sys.dic.service.impl.DicFactory" lazy-init="false"> 
		<property name="dicService" ref="sys.dicServiceImpl"/>
	</bean>
	<!-- 文件操作工具方法声明 -->
	<bean name="fileFactory"  class="com.innovate.sys.file.service.impl.FileFactory" lazy-init="false"> 
		<property name="fileService" ref="fileServiceImpl"/>
	</bean>
	
</beans>  