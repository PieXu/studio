<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<description>== Shiro EhCache 配置 ==</description>
	
	<!-- 授权 认证 -->
	<bean id="sampleRealm" class="com.innovate.core.realm.CustomerShiroRealm" >
		<!-- 密码加密验证方式 MD5-->  
        <property name="credentialsMatcher">    
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">    
                <property name="hashAlgorithmName" value="MD5" />  
                <property name="hashIterations" value="1024"></property> 
            </bean>    
        </property> 
	</bean>

	<!-- 用户信息记住我功能的相关配置 -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg value="v_v-re-cookie"/>
	    <property name="httpOnly" value="true"/>
	    <property name="maxAge" value="2592000"/>
	</bean>
    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('3AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
	
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg value="v_v-s-baidu"/>
	    <property name="httpOnly" value="true"/>
	    <property name="maxAge" value="-1"/>
	</bean>

	<!-- Session管理开始 -->
	<!-- 会话Session ID生成器 -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		 <!-- 间隔多少时间检查，不配置是60分钟
	     <property name="interval" value="${session.validate.timespan}"/> -->
	     <property name="sessionManager" ref="sessionManager"/>
	</bean>
	
	<bean id="sessionDao" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO"/>
	<!-- Session Manager -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 相隔多久检查一次session的有效性 -->
		<property name="sessionValidationInterval" value="1800000" />
		<!-- session 有效时间为半小时 （毫秒单位） -->
		<property name="globalSessionTimeout" value="1800000" />
		<property name="sessionDAO" ref="sessionDao"/>
		<!-- 间隔多少时间检查，不配置是60分钟 -->
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<!-- 是否开启 检测，默认开启 -->
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<!-- 是否删除无效的，默认也是开启 -->
		<property name="deleteInvalidSessions" value="true" />
		<!-- 会话Cookie模板 -->
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>

	<!-- 用户缓存 -->
    <!-- 缓存管理器开始 与系统的echcahce公用一个 -->  
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
	        <property name="cacheManager" ref="cacheManagerFactory"/>  
	</bean>  
    
	
	<!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="sampleRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <property name="cacheManager" ref="shiroCacheManager"/>
    </bean>
	
	<!--
		自定义角色过滤器 支持多个角色可以访问同一个资源 eg:/home.jsp = authc,roleOR[admin,user]
		用户有admin或者user角色 就可以访问
	-->
    <bean id="login" class=" com.innovate.core.filter.LoginFilter"/>
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.do" />
		<property name="successUrl" value="/main.do" />
		<property name="unauthorizedUrl" value="/login.do" />
        <property name="filterChainDefinitions">    
            <value>    
                <!-- anon表示此地址不需要任何权限即可访问 -->  
                /css/**=anon  
                /js/**=anon  
                /lib/**=anon  
                <!--   /endpointWS = anon  -->
                <!--所有的请求(除去配置的静态资源请求或请求地址为anon的请求)都要通过登录验证,如果未登录则跳到/login-->    
				/login.do = anon
                /logout.do = anon
                /main.do = login,user
 				/user/** = login
 				/role/** = login
 				/res/** = login
 				/product/** = login
 				/dic/** = login
 				/grant/** = login
 				/security/** = login,user
            </value>    
        </property>    
		<property name="filters">
           <util:map>
              <entry key="login" value-ref="login"></entry>
           </util:map>
       </property>
	</bean>
	<!-- Shiro生命周期处理器-->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

</beans>

