<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:aop="http://www.springframework.org/schema/aop"  
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:mvc="http://www.springframework.org/schema/mvc"  
       xmlns:tx="http://www.springframework.org/schema/tx"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xmlns:p="http://www.springframework.org/schema/p" 
       xmlns:websocket="http://www.springframework.org/schema/websocket"  
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd   
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd   
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd"
        default-autowire="byName"  default-lazy-init="false">  
    <context:annotation-config />
    <!-- 扫描controller（controller层注入）-->  
 	<context:component-scan base-package="com.innovate" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
    
   <!--  配置mvc的拦截器 可以配置多个 -->
    <!-- <mvc:interceptors>
   			<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
        <mvc:interceptor>
             需要被拦截的路径
            <mvc:mapping path="/**" />
	            拦截处理的interceptor
            <bean class="com.innovate.core.interceptor.CommonInterceptor">
	            <property name="excludedUrls">  
					<list>  
						<value>/rest/login</value>  
						<value>/rest/toLogin</value>
					</list>  
				</property> 
			</bean>
	      
        </mvc:interceptor>
    </mvc:interceptors> -->
  
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">  
        <property name="defaultLocale" value="zh_CN"/>  
    </bean>  
  
    <!-- 支持返回json(避免IE在ajax请求时，返回json出现下载 ) 5.0版本以前需要配置，以后自动配置不需要添加
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter"/>  
            </list>  
        </property>  
    </bean>   -->  
    <bean id="mappingJacksonHttpMessageConverter"  
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>
                <value>text/plain;charset=UTF-8</value>  
                <value>application/json;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
    <!-- 支持返回json -->  
  
   <!-- 引入tiles配置文件 -->
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" >
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles.xml</value>
            </list>
        </property>
    </bean>

    <!-- 配置视图解析器 -->
    <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
     	<property name="order" value="1"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <property name="requestContextAttribute" value="rc"/>
        <property name="contentType" value="charset=utf-8"></property>
    </bean>
  
    <!-- 对模型视图添加前后缀-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" > 
     	<property name="order" value="2" />
        <property name="requestContextAttribute" value="rc"/>
     	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
      	<property name="prefix" value="/WEB-INF/views/" />
   	 	<property name="suffix" value=".jsp" />
 	</bean>
 	
	<mvc:annotation-driven/> 
 	<!-- 配置使Spring采用CGLIB代理   --> 
    <aop:aspectj-autoproxy proxy-target-class="true"/>
 	<!-- 系统访问日志配置  start -->  
    <!-- 声明切面类 -->  
    <bean id="visitLogAspect" class="com.innovate.core.interceptor.VisitLogAspect" />  
    <!-- 系统访问日志的记录，登录登出 -->
    <aop:config>  
        <aop:aspect ref="visitLogAspect">  
          <aop:before method="logoutBefore" pointcut="execution(* com.innovate.sys.security.controller.LoginController.logout(..)) "/>
          <aop:after method="doVisitSucccess"  pointcut="@annotation(com.innovate.basic.annotation.SystemVisitLog)" />
          <aop:after-throwing method="doVisitedException"  pointcut="@annotation(com.innovate.basic.annotation.SystemVisitLog)"  throwing="e"/>
           <!--  <aop:after-throwing method="doAfterThrowing" pointcut="@annotation(com.ctlovedove.log.annotation.SystemServiceLog)" throwing="e"/>   -->
        </aop:aspect> 
       <!--  <aop:aspect ref="auditLogAspect">  
          <aop:after method="doAuditSucccess"  pointcut="execution(* com.innovate..controller.*.*(..)) " />
          <aop:after-throwing method="doAuditException"  pointcut="execution(* com.innovate..controller.*.*(..)) "  throwing="e"/>
        </aop:aspect>  -->
    </aop:config>  
    <!-- 系统访问日志配置  end -->  
    
    <!-- 系统操作审计日志配置  start -->  
    <!-- 声明切面类
    <bean id="auditLogAspect" class="com.innovate.core.interceptor.AuditLogAspect" /> -->  
    <!-- 系统访问日志的记录，登录登出 -->
   <!--  <aop:config>  
       
    </aop:config>   -->
    <!-- 系统操作日志配置  end -->
     <!-- <bean class="com.easysoft.logs.aspect.AuditLogAspect" /> -->
    <!-- web.xml中配置静态的文件的访问， 不需要登录认证拦截的 -->
   <mvc:default-servlet-handler/>
 	
</beans>  